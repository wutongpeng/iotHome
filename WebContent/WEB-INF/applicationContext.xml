<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 启用注解扫描 -->
    <context:annotation-config/>

	<!-- 定义业务逻辑组件模板,为之注入DAO组件 -->
	<bean id="managerTemplate" abstract="true" 
		p:userDao-ref="userDao"
		p:dht11Dao-ref="dht11Dao"
		/>

	<!-- 定义业务逻辑组件，继承业务逻辑组件的模板 -->
	<bean id="uservice"
		class="org.kilo.iothome.service.impl.UserServiceImpl"
		parent="managerTemplate"/>
		
	<bean id="dservice"
		class="org.kilo.iothome.service.impl.Dht11ServiceImpl"
		parent="managerTemplate"/>
	<bean id="sservice"
	    class="org.kilo.iothome.pi.socket.service.SocketServiceImpl"/>
	
	
	


	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 ,
	并注入SessionFactory的引用 -->
	<bean id="transactionManager" class=
	"org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>	
	<!-- 启用事务注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    
    
    <!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配uservice Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut"
			expression="bean(uservice)"/>
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" 
			pointcut-ref="leePointcut"/>
	</aop:config>	
    
 
    
    <!-- 让Spring管理的Action实例，并依赖注入业务逻辑组件 -->
	<bean id="loginAction" class="org.kilo.iothome.web.action.LoginAction"
		scope="prototype" />
	<bean id="appAction" class="org.kilo.iothome.web.action.AppAction"
		scope="prototype" />
	<bean id="dht11Action" class="org.kilo.iothome.web.action.Dht11Action"
		 />
	<bean id="historyAction" class="org.kilo.iothome.web.action.HistoryAction"
		scope="prototype" />
	
</beans>